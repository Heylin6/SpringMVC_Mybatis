package com.example.demo.Controller;

import java.io.IOException;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/auth")
public class AuthController {
	
		/**
		 * @Title: Login
		 * @Description: google登入驗證後會重定向到此地址，並附帶訪問授權碼，不能為公開的ip地址
		 * @author 此方法是用帶回的code換取accessToken，然後用accessToken換取使用者資訊，這個地址就是在建立應用時定義的重定向地址
		 * @return Object
		 * @date Mar 23, 2017 10:37:38 AM
		 * @throws
		 */
		@RequestMapping(value = "/google")
		@ResponseBody
		public static Object Login(HttpServletRequest request) {
			String code = request.getParameter("code");
			System.out.println(code);
			
			
			String accessToken = getGoogleAccessToken(code);
			System.out.println(accessToken);
			JSONObject userInfo = getUserInfo(accessToken);
			System.out.println(userInfo);
			return userInfo;
		}
	
	  @RequestMapping(value = "/facebookredir")
	  public void facebookredirect(HttpServletResponse res) throws IOException {
	    
		  //查看回傳的id有無在資料庫
		  //
		  //假設 有 轉址登入後畫面		  
	  }
	  
	  @RequestMapping(value = "/googleredir")
	  public void googleredirect(HttpServletResponse res) throws IOException {
	    
			// 隨機字串，防止csrf攻擊
			String state = UUID.randomUUID() + "";
			Map<String, String> params = new HashMap<String, String>();
			params.put("client_id", client_id);
			params.put("redirect_uri", redirect_url);
			params.put("response_type", "code");
			params.put("scope", scope);
			params.put("access_type", "offline");
			params.put("state", state);
			params.put("include_granted_scopes", "true");
			String url = HttpClientUtil.getUrl(code_url, params);
			response.sendRedirect(url);
		  //查看回傳的id有無在資料庫
		  //
		  //假設 有 轉址登入後畫面		  
	  }
	  
	  @RequestMapping(value = "/githubredir")
	  public void githubredirect(HttpServletResponse res) throws IOException {
	    
		  //查看回傳的id有無在資料庫
		  //
		  //假設 有 轉址登入後畫面		  
	  }
}
