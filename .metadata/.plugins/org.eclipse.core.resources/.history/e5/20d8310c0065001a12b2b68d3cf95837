package com.example.demo.Service;

import java.util.HashMap;

import org.json.JSONObject;

public class AuthService {
	
		/**
		 * @Title: getGoogleAccessToken
		 * @Description: 獲取accessToken
		 * @author 第三步，用重定向帶回來的code換取accessToken
		 * @return String
		 * @date Mar 25, 2017 10:25:00 AM
		 * @throws
		 */
		public static String getGoogleAccessToken(String code) {
			
			HashMap<String, String> params = new HashMap<String, String>();
			params.put("client_id", client_id);
			params.put("redirect_uri", redirect_url);
			params.put("client_secret", client_secret);
			params.put("grant_type", "authorization_code");
			params.put("code", code);
			String[] responseResult = null;
			String accessToken =null;
			String idToken=null;
			try {
				responseResult = HttpClientUtil.getStringByPost(token_url, params,
						null);
			} catch (Exception e) {
				e.printStackTrace();
			}
			if (null != responseResult && responseResult[0].equals("200")) {
				String result = responseResult[1];
				 JSONObject jsonObject = JSONObject.fromObject(result);
				 accessToken = jsonObject.getString("access_token");
				 idToken=jsonObject.getString("id_token");
			}
			return accessToken;
	//		return idToken;
		}
		
		/**
		 * @Title: getUserInfo
		 * @Description: 獲取使用者資訊
		 * @author第四步，用accessToken獲取使用者資訊
		 * @return String
		 * @date Mar 25, 2017 11:50:23 AM
		 * @throws
		 */
		public static JSONObject getUserInfo(String accessToken) {
			HashMap<String, String> params = new HashMap<String,String>();
			params.put("access_token", accessToken);
			String[] responseResult =null;
			JSONObject userInfo=null;
			try {
				responseResult = HttpClientUtil.getStringByGet(user_url, params);
			} catch (Exception e) {
				e.printStackTrace();
			}
			if (null != responseResult && responseResult[0].equals("200")) {
				String result = responseResult[1];
				userInfo =  JSONObject.fromObject(result);   
			}
			return userInfo;
		}
		
		/**
		 * @Title: verifyToken  
		 * @Description:驗證使用者token是否是來自本應用的請求，校驗aud和clientID是否相同  
		 * @author第五步，驗證使用者是否來自你的應用，防刷，根據需要加到邏輯裡
		 * @return String
		 * @date Mar 25, 2017 7:36:33 PM
		 * @throws
		 */
		public static JSONObject verifyToken(String idToken){
			HashMap<String, String> params = new HashMap<String,String>();
			params.put("id_token", idToken);
			String[] responseResult =null;
			JSONObject verifyInfo=null;
			try {
				responseResult = HttpClientUtil.getStringByGet(verify_url, params);
			} catch (Exception e) {
				e.printStackTrace();
			}
			if (null != responseResult && responseResult[0].equals("200")) {
				String result = responseResult[1];
				verifyInfo =  JSONObject.fromObject(result);   
			}
			return verifyInfo;
		}
}
